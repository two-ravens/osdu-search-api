// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type QueryRequestKind struct {
}

type QueryRequest struct {
	Kind            QueryRequestKind `json:"kind"`
	Limit           *int             `json:"limit,omitempty"`
	Query           *string          `json:"query,omitempty"`
	ReturnedFields  []string         `json:"returnedFields,omitempty"`
	Sort            *SortQuery       `json:"sort,omitempty"`
	QueryAsOwner    *bool            `json:"queryAsOwner,omitempty"`
	TrackTotalCount *bool            `json:"trackTotalCount,omitempty"`
	SpatialFilter   *SpatialFilter   `json:"spatialFilter,omitempty"`
	AggregateBy     *string          `json:"aggregateBy,omitempty"`
	Offset          *int             `json:"offset,omitempty"`
}

func (o *QueryRequest) GetKind() QueryRequestKind {
	if o == nil {
		return QueryRequestKind{}
	}
	return o.Kind
}

func (o *QueryRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *QueryRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *QueryRequest) GetReturnedFields() []string {
	if o == nil {
		return nil
	}
	return o.ReturnedFields
}

func (o *QueryRequest) GetSort() *SortQuery {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *QueryRequest) GetQueryAsOwner() *bool {
	if o == nil {
		return nil
	}
	return o.QueryAsOwner
}

func (o *QueryRequest) GetTrackTotalCount() *bool {
	if o == nil {
		return nil
	}
	return o.TrackTotalCount
}

func (o *QueryRequest) GetSpatialFilter() *SpatialFilter {
	if o == nil {
		return nil
	}
	return o.SpatialFilter
}

func (o *QueryRequest) GetAggregateBy() *string {
	if o == nil {
		return nil
	}
	return o.AggregateBy
}

func (o *QueryRequest) GetOffset() *int {
	if o == nil {
		return nil
	}
	return o.Offset
}
